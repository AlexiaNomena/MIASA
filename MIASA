# Main workflow of MIASA


report: "report/workflow.rst"


rule_all_common = [
    "results/miasa_results.pck",
]

if config["fig_miasa"]:
    rule_all_common.append("plots/" + config["fig_method"] + "_One_Panel.pdf"),
    rule_all_common.append("plots/" + config["fig_method"] + "_Separate_Panels.pdf"),

if config["eval_clust"]:
    rule_all_common.append("scores/Cluster_scores.pdf")


rule all:
    input:
        rule_all_common,


rule get_miasa:
    input:
        Data_X=config["Data_X"],
        Data_Y=config["Data_Y"],
        D_X=config["d_X"],
        D_Y=config["d_Y"],
        d_XY=config["d_XY"],
    params:
        sim_meth_X=config["sim_X"],
        sim_meth_Y=config["sim_Y"],
        norm_X=config["norm_X"],
        norm_Y=config["norm_Y"],
        eucl_X=config["Eucl_X"],
        eucl_Y=config["Eucl_Y"],
        clust_meth=config["clustering_method"],
        num_clust=config["num_clust"],
    output:
        dir=directory("results"),
        res="results/miasa_results.pck",
    shell:
        "python {workflow.basedir}/scripts/get_results/miasa_class.py {input.Data_X} {input.Data_Y} {params.sim_meth_X} {params.sim_meth_Y} {input.D_X} {input.D_Y} {input.d_XY} {params.eucl_X} {params.eucl_Y} {params.norm_X} {params.norm_Y} {params.clust_meth} {params.num_clust} {output.dir}"


if config["fig_miasa"]:

    rule get_fig:
        input:
            miasa_res="results/miasa_results.pck",
        params:
            fig_method=config["fig_method"],
            n_neighbors=config["n_neighbors"],
            palette=config["palette"],
            min_dist=config["min_dist"],
            show_labels=config["show_labels"],
            convex_hull=config["convex_hull"],
            size_X=config["size_X"],
            size_Y=config["size_Y"],
            marker_X=config["marker_X"],
            marker_Y=config["marker_Y"],
        output:
            dir=directory("plots"),
            res1="plots/" + config["fig_method"] + "_One_Panel.pdf",
            res2="plots/" + config["fig_method"] + "_Separate_Panels.pdf",
        shell:
            "python {workflow.basedir}/scripts/get_plots/Plot_class.py {input.miasa_res} {params.fig_method} {params.n_neighbors} {params.palette} {params.min_dist} {output.dir} {params.show_labels} {params.convex_hull} {params.size_X} {params.size_Y} {params.marker_X} {params.marker_Y}"


if config["eval_clust"]:

    rule get_scores:
        input:
            Data_X=config["Data_X"],
            Data_Y=config["Data_Y"],
            D_X=config["d_X"],
            D_Y=config["d_Y"],
            d_XY=config["d_XY"],
        params:
            sim_meth_X=config["sim_X"],
            sim_meth_Y=config["sim_Y"],
            norm_X=config["norm_X"],
            norm_Y=config["norm_Y"],
            eucl_X=config["Eucl_X"],
            eucl_Y=config["Eucl_Y"],
            clust_meth=config["clustering_method"],
            num_clust="Score",
            min_num=config["min_num"],
            max_num=config["max_num"],
        output:
            dir=directory("scores"),
            res="scores/Cluster_scores.pdf",
        shell:
            "python {workflow.basedir}/scripts/get_results/miasa_class.py {input.Data_X} {input.Data_Y} {params.sim_meth_X} {params.sim_meth_Y} {input.D_X} {input.D_Y} {input.d_XY} {params.eucl_X} {params.eucl_Y} {params.norm_X} {params.norm_Y} {params.clust_meth} {params.num_clust} {output.dir} {params.min_num} {params.max_num}"
